import csv

# 데이터를 CSV 파일에 저장 (원본 그대로 저장)
def save_saturation_vapor_data(data, file_path):
    with open(file_path, 'w', newline='') as file:
        writer = csv.writer(file)
        for temperature, saturation_vapor in data.items():
            writer.writerow([temperature, saturation_vapor])

# 데이터를 CSV 파일에서 읽어오기
def read_saturation_vapor_data(file_path):
    data = {}
    with open(file_path, 'r') as file:
        reader = csv.reader(file)
        for row in reader:
            temperature, saturation_vapor = map(float, row)
            data[temperature] = saturation_vapor
    return data

# 포화 수증기량 데이터 생성 및 저장
saturation_data = {
    -100: '0.0000150',
    -99: '0.0000213',
    -98: '0.0000259',
    -97: '0.0000313',
    -96: '0.0000379',
    -95: '0.0000458',
    -94: '0.0000551',
    -93: '0.0000663',
    -92: '0.0000795',
    -91: '0.0000952',

    -90: '0.000114',
    -89: '0.000136',
    -88: '0.000162',
    -87: '0.000192',
    -86: '0.000228',
    -85: '0.000269',
    -84: '0.000318',
    -83: '0.000376',
    -82: '0.000442',
    -81: '0.000520',

    -80: '0.000610',
    -79: '0.000715',
    -78: '0.000836',
    -77: '0.000977',
    -76: '0.00114',
    -75: '0.00133',
    -74: '0.00154',
    -73: '0.00179',
    -72: '0.00207',
    -71: '0.00240',

    -70: '0.00277',
    -69: '0.00320',
    -68: '0.00369',
    -67: '0.00425',
    -66: '0.00488',
    -65: '0.00560',
    -64: '0.00642',
    -63: '0.00734',
    -62: '0.00840',
    -61: '0.00959',

    -60: '0.0109',
    -59: '0.0125',
    -58: '0.0143',
    -57: '0.0161',
    -56: '0.0183',
    -55: '0.0207',
    -54: '0.0234',
    -53: '0.0265',
    -52: '0.0290',
    -51: '0.0338',

    -50: '0.0381',
    -49: '0.0428',
    -48: '0.0484',
    -47: '0.0541',
    -46: '0.0608',
    -45: '0.0681',
    -44: '0.0763',
    -43: '0.0854',
    -42: '0.0955',
    -41: '0.107',

    -40: '0.119',
    -39: '0.133',
    -38: '0.148',
    -37: '0.164',
    -36: '0.183',
    -35: '0.203',
    -34: '0.225',
    -33: '0.249',
    -32: '0.276',
    -31: '0.305',

    -30: '0.338',
    -29: '0.373',
    -28: '0.412',
    -27: '0.454',
    -26: '0.501',
    -25: '0.551',
    -24: '0.607',
    -23: '0.667',
    -22: '0.732',
    -21: '0.804',

    -20: '0.882',
    -19: '0.967',
    -18: '1.06',
    -17: '1.16',
    -16: '1.27',
    -15: '1.39',
    -14: '1.51',
    -13: '1.65',
    -12: '1.80',
    -11: '1.96',
    
    -10: '2.14',
    -9: '2.33',
    -8: '2.53',
    -7: '2.75',
    -6: '2.99',
    -5: '3.24',
    -4: '3.52',
    -3: '3.92',
    -2: '4.13',
    -1: '4.48',

    0: '4.85',
    1: '5.19',
    2: '5.56',
    3: '5.94',
    4: '6.36',
    5: '6.79',
    6: '7.26',
    7: '7.75',
    8: '8.27',
    9: '8.81',

    10: '9.39',
    11: '10.0',
    12: '10.7',
    13: '11.3',
    14: '12.1',
    15: '12.8',
    16: '13.6',
    17: '14.5',
    18: '15.4',
    19: '16.3',

    20: '17.2',
    21: '18.3',
    22: '19.4',
    23: '20.6',
    24: '21.8',
    25: '23.0',
    26: '24.4',
    27: '25.8',
    28: '27.2',
    29: '28.7',

    30: '30.3',
    31: '32.0',
    32: '33.7',
    33: '35.6',
    34: '37.6',
    35: '39.6',
    36: '41.7',
    37: '43.9',
    38: '46.2',
    39: '48.6',

    40: '51.1',
    41: '53.7',
    42: '56.4',
    43: '59.3',
    44: '62.2',
    45: '65.3',
    46: '68.5',
    47: '71.9',
    48: '75.4',
    49: '79.0',

    50: '82.8',
    51: '86.7',
    52: '90.8',
    53: '95.0',
    54: '99.5',
    55: '104',
    56: '109',
    57: '114',
    58: '119',
    59: '124',

    60: '130',
    61: '135',
    62: '141',
    63: '147',
    64: '154',
    65: '160',
    66: '167',
    67: '174',
    68: '182',
    69: '189',

    70: '197',
    71: '205',
    72: '213',
    73: '222',
    74: '231',
    75: '240',
    76: '250',
    77: '259',
    78: '270',
    79: '280',

    80: '291',
    81: '302',
    82: '313',
    83: '325',
    84: '337',
    85: '350',
    86: '363',
    87: '376',
    88: '390',
    89: '404',

    90: '418',
    91: '433',
    92: '449',
    93: '465',
    94: '481',
    95: '498',
    96: '515',
    97: '532',
    98: '551',
    99: '569'

}

save_saturation_vapor_data(saturation_data, 'saturation_data.csv')

# 파일에서 데이터 읽어오기
loaded_data = read_saturation_vapor_data('saturation_data.csv')
print(loaded_data)
print(type(loaded_data))

print(loaded_data[ 0  ])